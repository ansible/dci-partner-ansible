# - name: Ensure that they system is running Red Hat
#   assert:
#     that:
#       - ansible_os_family == "RedHat"
#       - ansible_distribution_major_version == "7"

- set_fact:
    dci_user: david_mac_user
    dci_control_url: https://api.distributed-ci.io
    dci_api_key: dci4ansible

- name: Ensure required variables are defined
  fail: msg="{{ item }} value missing and is required"
  when: "{{ item }} is not defined"
  with_items:
    - dci_user
    - dci_control_url
    - dci_api_key

- name: install neccesary packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - python-pip
    - git
    - ansible

- name: install a couple of neccesary python packages
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - junit_xml   # allows usage of the junit callback plugin
    - xunitmerge  # allows user to merge junit into one file

- name: install dci agent
  pip:
    name: git+https://github.com/redhat-cip/python-dciclient.git
    state: present
    editable: false

- name: download ansible-dci from github
  git:
    repo: https://github.com/redhat-cip/dci-ansible.git
    dest: /tmp/git_files/

- name: create directories
  file:
    path: /usr/share/dci/
    state: directory


- name: install ansible-dci modules/plugins
  shell: "cp -r /tmp/git_files/{{ item }} /usr/share/dci/{{ item }}"
  # args:
  #   creates: "/usr/share/dci/{{ item }}"
  with_items:
    - callback
    - modules
    - module_utils

# - name: temp fix for bug with requests requirment
#   lineinfile:
#     path: /usr/lib/python2.7/site-packages/dciclient-0.3.3-py2.7.egg-info/requires.txt
#     regexp: '^requests'
#     line: 'requests'

- name: set up connection information
  template:
    src: templates/env.sh
    dest: /etc/profile.d/dci_credentials.sh
    owner: root
    group: root
    mode: 0744
  no_log: true

- name: configure Ansible to use the DCI callback plugins and modules
  template:
    src: templates/ansible.cfg
    dest: /etc/ansible/ansible.cfg
